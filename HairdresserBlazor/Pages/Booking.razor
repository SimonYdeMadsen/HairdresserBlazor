@page "/booking"

@if (hairdresserIds == null)
{
	<LoadingHandler />
}
else
{
	<div>
		<h1>Booking</h1>
		<br>
	</div>


	if (dateChoice == default(DateTime))
	{
	<div>
		<h3>Choose your favorite hairdresser!</h3>
		<br>
		<br>
		@foreach (int id in CalendarRenderStates.Keys)
		{
		<div>
			@if (CalendarRenderStates[id] == false)
			{
				<p>Choose your service by the hands of @namesDict[id].</p>
				<DurationChoiceView  OnDurationChosen="OnDurationChanged"/>
				<button @onclick='() => UserChoseHairdresser(id)'>Submit</button>
			}
			else
			{
				<Calendar 
					HairdresserId="hairdresserIds.Dequeue()" 
					Date="defaultCalendarDate" 
					DurationInMinutes="DurationInMinutes" 
					UserId="userId"
					OnDateChosen="OnDateChanged"
				/>
				<br />
			}
		</div>
		}
	</div>
	}
	else
	{
		<ConfirmationView 
			DurationInMinutes="DurationInMinutes" 
			HairdresserId="hairdresserChoice"
			UserId="userId"
			DateChoice="dateChoice"
		/>
	}
}

@code {

	[Inject]
	public IHairdresserRepository HairdresserRepository { get; set; }

	[Inject]
	public IUserHandler UserHandler { get; set; }

	private int DurationInMinutes = Int32.MinValue;
	private int userId = Int32.MinValue;
	private int hairdresserChoice = Int32.MinValue;
	private DateTime dateChoice;

	private Dictionary<int, bool> CalendarRenderStates = new();
	private Queue<int> hairdresserIds;
	private List<String> hairdresserNames;
	private Dictionary<int, string> namesDict = new();

	private DateTime defaultCalendarDate = DateTime.Today;

	protected async override Task OnInitializedAsync()
	{
		var ids = (await HairdresserRepository.GetHairdresserIds()).ToList();
		hairdresserIds = new Queue<int>(ids);
		this.hairdresserNames = (await HairdresserRepository.GetHairdresserNames()).ToList();

		for (int i = 0; i < hairdresserNames.Count; i++)
		{
			var id = ids[i];
			namesDict.Add(id, hairdresserNames[i]);
			CalendarRenderStates.Add(id, false);
		}

		userId = UserHandler.GetId(await UserHandler.GetCurrentUser());

	}

	private void UserChoseHairdresser(int id)
	{
		if (CalendarRenderStates.TryGetValue(id, out _))
		{
			CalendarRenderStates[id] = true;
		}
		hairdresserChoice = id;
	}

	private void OnDurationChanged(int duration)
	{
		DurationInMinutes = duration;
	}

	private void OnDateChanged(DateTime date)
	{
		dateChoice = date;
	}
}
