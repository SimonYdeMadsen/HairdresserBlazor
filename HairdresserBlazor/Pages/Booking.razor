@page "/booking"

@if (hairdresserNames == null)
{
	<LoadingHandler />
}
else
{
	<div>
		<h1>Booking</h1>
		<br>
		<h3>Choose your favorite hairdresser!</h3>
		<br>
		<br>
	</div>



	<div>
		@for (int j = 0; j < hairdresserIds.Count; j++)
		{
			int i = j; // Complains otherwise.
			<div>
				<br />
				<p>Choose your service by the hands of @hairdresserNames[i]</p>
				<DurationChoiceView  OnDurationChosen="OnDurationChanged"/>
				<button @onclick="() => CalendarRenderStates[i] = true">Submit</button>
				@if (CalendarRenderStates[i])
				{
					<Calendar HairdresserId="hairdresserIds[i]" Date="defaultCalendarDate" DurationInMinutes="DurationInMinutes" />
					<br />
				}

			</div>

		}


	</div>



}

@code {

	private int DurationInMinutes;
	private List<bool> CalendarRenderStates;

	[Inject]
	public IHairdresserRepository HairdresserRepository { get; set; }

	private List<int> hairdresserIds;

	private List<string> hairdresserNames;

	private DateTime defaultCalendarDate = DateTime.Today;

	protected async override Task OnInitializedAsync()
	{
		this.hairdresserIds = (await HairdresserRepository.GetHairdresserIds()).ToList();
		this.hairdresserNames = (await HairdresserRepository.GetHairdresserNames(hairdresserIds)).ToList();

		CalendarRenderStates = Enumerable.Repeat(false, hairdresserIds.Count).ToList();
	}

	private void OnDurationChanged(int duration)
	{
		DurationInMinutes = duration;
	}
}
