@page "/"
@using System.Security.Claims;

<PageTitle>Index</PageTitle>
<h2>Welcome to my booking website.</h2>
<br />

<AuthorizeView>
    <NotAuthorized>
        <p><a href="Identity/Account/Login">Sign in</a> to view your appointments.</p>
        <p><a href="Identity/Account/Register">Register</a> if you don't have an account.</p>
    </NotAuthorized>
</AuthorizeView>
<AuthorizeView>
@if (appointments == null)
{
    <LoadingHandler/>
}
else
{
    if (user.IsInRole("Employee"))
    {
        <DisplayAppointments Appointments="appointments"/>
    }
    else
    {
        <DisplayAppointments Appointments="appointments"/>
    }
    if (user.IsInRole("Admin"))
    {
        <h3>@user.Identity.Name</h3>
        <div class="m-2 p-2">
            Is Authenticated: @user.Identity.IsAuthenticated
        </div>
        <div class="m-2 p-2">
            Authentication Type: @user.Identity.AuthenticationType
        </div>
        <div class="m-2 p-2">
            Admin Role: @user.IsInRole("Admin")
        </div>
        <div class="m-2 p-2">
            Employee Role: @user.IsInRole("Employee")
        </div>
        <div class="m-2 p-2">
            Normal Role: @user.IsInRole("Normal")
        </div>
        <div class="m-2 p-2">
            <h5>Claims</h5>
            @foreach (var claim in user.Claims)
            {
                <span>
                    @claim.Type
                </span>
                <span>:</span>
                <span>
                    @claim.Value
                </span>
                <br />
            }
        </div>
    }
}
</AuthorizeView>
@code{
    [CascadingParameter] 
    public Task<AuthenticationState> AuthTask { get; set; }
    private ClaimsPrincipal user;

    [Inject]
    public IAppointmentRepository AppointmentRepository { get; set; }

    [Inject]
    public IUserHandler UserHandler { get; set; }

    private IEnumerable<Appointment> appointments;


    protected async override Task OnInitializedAsync()
    {
        user = await UserHandler.GetCurrentUser();
        if (user != null)
        {
            Console.WriteLine("user not null");
            int userId = UserHandler.GetId(user);
            Console.WriteLine($"userId: {userId}");
            Console.WriteLine(user.Claims.ToString());

            if (user.IsInRole("Employee") || user.IsInRole("Admin"))
            {
                appointments = await AppointmentRepository.GetHairdresserAppointments(userId);
            }
            else
            {
                appointments = await AppointmentRepository.GetUserAppointments(userId);
            }
        }
    }

}

